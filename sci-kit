### Where to find what and explanations

sklearn.datasets --> example datasets

sklearn.cross_validation - train_test_split  --> validate using tarining and testing split
                         - cross_val_score   --> validate model using cross validation

sklearn.neighbours --> neighbours algorithms
                    -  KNeighboursClassifiers
                    
sklearn --> scikit learn
          - metrics       --> model evaluation
          

### SYNTAX

X_train, X_test, y_train, y_test = train_test_split(X,y,random_state=2) (split data into training and testing set)

knn = KNeighborsClassifier(n_neighbors=5)
knn.fit(X_train,y_train)
y_pred = knn.predict(X_test)

scores = cross_val_score(knn{model instance}, X, y, cv=10{cross validation folds}, scoring = 'accuracy') --> gives array with 10 results
scores.mean()

metrics.accuracy_score(y_test,y_pred) (test accuracy of classification model)
